// Idea:
// Straightforward implementation of pre-order traversal into a CSV list and vice-versa.
var serialize = function(root) {
    
        let go = (root, A = []) => {
        if (root == null) {
            A.push('null');
        } else {
            A.push(root.val);
            A = go(root.left, A); //we are carrying the values in A over left then                                     over right and so on :) . so basically we are                                       updating A
            A = go(root.right, A);
        }
        return A;
    };
    let A = go(root);
    return A.join(',');
};

var deserialize = function(s) {
        let A = s.split(',');
    let go = () => {
        let x = A.shift();
        if (x == 'null')
            return null;
        let root = new TreeNode(x);
        root.left = go();
        root.right = go();
        return root;
    };
    return go();

};
