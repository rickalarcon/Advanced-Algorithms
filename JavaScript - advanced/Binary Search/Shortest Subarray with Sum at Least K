// USING DEQUEUE
var shortestSubarray = function(A, K) {
    let n = A.length;
    let min = n+1;
    let B = new Array(n+1).fill(0);  //ei. when n=3 then B = [0,0,0,0]
    for(let i=0; i<n; i++) B[i+1] = B[i] + A[i]; // accumulating sum  B[i]+A[1]  in B[i+1]
    console.log(B)
    let stack = [];
    for(let i=0; i<n+1; i++){  //indexes of B
              //first element of stack is a index too fyi
        while(stack.length > 0 && B[i]-B[stack[0]] >= K){ // B[i]- B[first element of "Stack"] >=
            min = Math.min(min, i-stack[0]);
            stack.shift();
        }
        while(stack.length > 0 && B[i] <= B[stack[stack.length-1]]){ //.. <= B[last element of "Stack"]
            stack.pop();
        }
        stack.push(i); //stack will contain the "indexes"
    }
    return min <= n ? min : -1;
};
