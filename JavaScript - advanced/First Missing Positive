// Idea:
// take only positive numbers and sort them in asc order
// then if 1 isnot there go iterate each number
// var firstMissingPositive = function(nums) {
  
  var min = Infinity;
  var nums = nums.filter( e => e>0).sort((a,b) => a-b); 
    if(!nums.includes(1)){return 1;}
    else{
        
    for(var i=0; i < nums.length-1; i++ ){  
        if( nums[i+1]-nums[i]>1) { return nums[i]+1}
        }    
    return nums[nums.length-1]+1    
    } 
};


// var firstMissingPositive = function(nums) {
//     let i = 0;
//     while (i < nums.length) {
//         if (nums[i] > 0  && nums[nums[i] - 1] !== nums[i]) {
//             [nums[nums[i] - 1], nums[i]] = [nums[i], nums[nums[i] - 1]];
//         } else {
//             i++;
//         }
//     }
//     for (i = 0; i < nums.length; i++) {
//         if (nums[i] !== i + 1) return i + 1;
//     }
//     return i + 1;
// };
// Go through and place each number at the index of its value (minus one since 0 isn't positive). All the negative and out-of-bounds elements should now be in the missing gap or on the right side of the array.
// Walk through and take the first index (plus one) which does not match its associated value.
