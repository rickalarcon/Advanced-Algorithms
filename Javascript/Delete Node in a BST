// Idea:
// 1) if header(top) is the key, then we find the min val on the right side, to make as the" new top",
// 2) then we attached its left side and right side
// 3)if Header isnot the key , then we have the 2 cases
var deleteNode = function(root, key) {
    if(root===null) return null;
    if(root.val ==key){                         //check top 
        if(root.left === null) return root.right;
        if(root.right === null) return root.left;
        let next = root.right;
        while(next.left) {next = next.left;} //Put MIN value of right side, as NEW TOP
        next.left = root.left;     //attached left side to new TOP
        console.log(root)
        return root.right;   //cuz webasically keep ROOT as reference and adding the "LEFT side" into the right side, in terms of original"ROOT" everthing will be in the right side
 //       thats why we return "root.right"
    }

    //2 cases: Use recursion to scan left or right;
 if(root.val>key) root.left = deleteNode(root.left,key);    //get left side modify
 else if(root.val<key) root.right  = deleteNode(root.right,key);// or get right side modify
 return root;
     
};
