/*
Given two strings s and t, return true if they are both one edit distance apart, otherwise return false.

A string s is said to be one distance apart from a string t if you can:

Insert exactly one character into s to get t.
Delete exactly one character from s to get t.
Replace exactly one character of s with a different character to get t.
*/



var isOneEditDistance = function(s, t) {
   //checking
    if(Math.abs(t.length-s.length)>1 || (s==t)  ){ return false }

    //3 cases
    //replace 1 character
if(t.length-s.length ==0){ 
    for(var i=0 ;i<=t.length;i++){
        if(s[i] !== t[i]){ 
         var x = [...s];
        x.splice(i,1,t[i]);
        s = x.join("");
         break;}}
    }
    //insert 1 character
else if(t.length-s.length ==1){ 
     for(var i=0 ;i<=t.length;i++){
    if(s[i] !== t[i]){ 
        var x = [...s];
        x.splice(i,0,t[i]);
        s = x.join("")
         break;}}
    }
    //delete 1 character
else if(s.length-t.length ==1){ 
    for(var i=0 ;i<=t.length;i++){
        if(s[i] !== t[i]){ 
        var x = [...s];
        x.splice(i,1);
        s = x.join("")
         break;}}
    }
    
 return s == t;

};
