/**
 * Initialize your data structure here.
 */
var WordDictionary = function() {
	//using an obj to store added strings
    this.map = {}
};

/**
 * Adds a word into the data structure. 
 * @param {string} word
 * @return {void}
 */
WordDictionary.prototype.addWord = function(word) {
    //using the length of stings as index to avoid full traversal
    if (word.length in this.map) {
        this.map[word.length].push(word)
    } else {
        this.map[word.length] = [word]
    }
};

/**
 * Returns if the word is in the data structure. A word could contain the dot character '.' to represent any one letter. 
 * @param {string} word
 * @return {boolean}
 */
WordDictionary.prototype.search = function(word) {
    let len = word.length
    if (len in this.map) {
        for (let i = 0; i < this.map[len].length; i++) { //to scan every word
            for (var j = 0; j < len; j++) { //to scan every letter
                //compare with the stored strings which have same length
                if (word[j] !== '.' && word[j] !== this.map[len][i][j]) {
                    break
                }
            }
            if (j === len) {
                return true
            }            
        }
    }
    return false

};


// class WordDictionary {
    
//     constructor(){
//         this.set = new Set();
//     }
    
//     addWord(word){
//         this.set.add(word)
//     }
    
//     search(word){
//         var leftover = [...this.set].filter(e=> e.length == word.length);
//         if(word.includes(".")){

//        for(var i=0; i<word.length; i++ ){
//     leftover =  leftover.filter( e => word[i]=="."? true : e[i] == word[i] );       
//        }
//     return leftover.length> 0? true:false;
//       }
//         else{   return this.set.has(word)   } 
//     }
// }
/** 
 * Your WordDictionary object will be instantiated and called as such:
 * var obj = new WordDictionary()
 * obj.addWord(word)
 * var param_2 = obj.search(word)
 */
